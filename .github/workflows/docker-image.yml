name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths: 
      - 'deployment_utils/lunabase/*.dockerfile'
      - 'deployment_utils/lunabase/*.sh'
  pull_request:
    branches: [ "main" ]
    paths: 
      - 'deployment_utils/lunabase/*.dockerfile'
      - 'deployment_utils/lunabase/*.sh'

jobs:

  build:

    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1

    steps:
      - name: Cache Docker images.
        uses: ScribeMD/docker-cache@0.3.0
        with:
          key: docker-${{ runner.os }}-${{ hashFiles('deployment_utils/lunabase/*.dockerfile', 'deployment_utils/lunabase/*.sh') }}

      - uses: actions/checkout@v3
      
      - name: Build AMD64 base
        run: docker build deployment_utils/lunabase/ --file deployment_utils/lunabase/amd.dockerfile --target base --tag ghcr.io/utahrobotics/lunabotics/base
      
      - name: Push AMD64 base
        run: docker image push ghcr.io/utahrobotics/lunabotics/base
      
      - name: Build AMD64 lunabase
        run: docker build deployment_utils/lunabase/ --file deployment_utils/lunabase/amd.dockerfile --target lunabase --tag ghcr.io/utahrobotics/lunabotics/lunabase
      
      - name: Push AMD64 lunabase
        run: docker image push ghcr.io/utahrobotics/lunabotics/lunabase
      
      - name: Build ARM64 base
        run: docker build deployment_utils/lunabase/ --file deployment_utils/lunabase/arm.dockerfile --target base --tag ghcr.io/utahrobotics/lunabotics/base_arm
      
      - name: Push ARM64 base
        run: docker image push ghcr.io/utahrobotics/lunabotics/base_arm
      
      - name: Build ARM64 lunabase
        run: docker build deployment_utils/lunabase/ --file deployment_utils/lunabase/arm.dockerfile --target lunabase --tag ghcr.io/utahrobotics/lunabotics/lunabase_arm
      
      - name: Push ARM64 lunabase
        run: docker image push ghcr.io/utahrobotics/lunabotics/lunabase_arm
